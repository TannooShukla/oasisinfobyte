# -*- coding: utf-8 -*-
"""Oasis_Task1_Irish_Flower.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1mqc-AXfOR2rudtbMCW21Z6vcNJ6rWIoP
"""

# importing libraries that I'll need
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.preprocessing import LabelEncoder
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.metrics import accuracy_score, classification_report, confusion_matrix

# loading the dataset
df = pd.read_csv("/content/Iris.csv")

# just checking how the data looks in the beginning
print(df.head())

# visualizing the data to see if different species look different in plots
sns.pairplot(df, hue='Species')
plt.show()

# converting species names (setosa, etc.) into numbers
le = LabelEncoder()
df['Species'] = le.fit_transform(df['Species'])  # like: setosa = 0, versicolor = 1, virginica = 2

# separating input features and the target label
X = df.drop("Species", axis=1)  # all columns except 'species'
y = df["Species"]               # this is what we want to predict

# splitting the dataset into training and testing parts
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# using a Random Forest classifier (works well for beginners and gives good results)
model = RandomForestClassifier(n_estimators=100, random_state=42)
model.fit(X_train, y_train)  # training the model with our training data

# now let's test how our model is doing
y_pred = model.predict(X_test)

# checking the accuracy and detailed report
print("Accuracy:", accuracy_score(y_test, y_pred))
print(classification_report(y_test, y_pred))

# creating a confusion matrix for a better visual of right/wrong predictions
cm = confusion_matrix(y_test, y_pred)
sns.heatmap(cm, annot=True, cmap='Blues', xticklabels=le.classes_, yticklabels=le.classes_)
plt.xlabel("Predicted")
plt.ylabel("Actual")
plt.title("Confusion Matrix")
plt.show()

